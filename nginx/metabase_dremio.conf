upstream metabase_server {
  # fail_timeout=0 means we always retry an upstream even if it failed
  # to return a good HTTP response (in case the Unicorn master nukes a
  # single worker for timing out).

      server metabase:3000 fail_timeout=0;
}

upstream dremio_ui {
      server dremio:9047 fail_timeout=0;
}

upstream dremio_jdbc_server {
      server dremio:31010 fail_timeout=0;
}

upstream dremio_additional {
      server dremio:45678 fail_timeout=0;
}

server {
    listen 80 ;
    # listen 8000 ssl;
    server_name _;
    # ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
    # ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;
    # ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
    client_max_body_size 4G;

    # access_log /app/logs/nginx/nginx-local-access.log;
    # error_log /app/logs/nginx/nginx-local-error.log;
 
    # location /static/ {
    #     alias   /app/mysupplychain/frontend/static/;
    # }
#     location /media/ {
#         alias   /app/mysupplychain/mediafiles/;
#     }

#     location /static/admin/ {
#         alias   /app/mysupplychain/staticfiles/admin/;
#     }

#     location /static/rest_framework/ {
#         alias   /app/mysupplychain/staticfiles/rest_framework/;
#     }

#     location /service-worker.js {
#    #     add_header 'Service-Worker-Allowed' '/';
#         alias   /app/mysupplychain/frontend/static/frontend/service-worker.js;
#     }    

#     location ~* ^/workbox-(?<workbox_variable>.+\.js)$ {
# #        add_header 'Service-Worker-Allowed' '/';
#         alias   /app/mysupplychain/frontend/dist/workbox-$workbox_variable;
#     }

    # location /media/ {
    #     alias   /webapps/hello_django/media/;
    # }

    location / {
        # an HTTP header important enough to have its own Wikipedia entry:
        #   http://en.wikipedia.org/wiki/X-Forwarded-For
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # enable this if and only if you use HTTPS, this helps Rack
        # set the proper protocol for doing redirects:
        proxy_set_header X-Forwarded-Proto https;

        # pass the Host: header from the client right along so redirects
        # can be set properly within the Rack application
        proxy_set_header Host $http_host;

        # we don't want nginx trying to do something clever with
        # redirects, we set the Host: header above already.
        proxy_redirect off;

        # set "proxy_buffering off" *only* for Rainbows! when doing
        # Comet/long-poll stuff.  It's also safe to set if you're
        # using only serving fast clients with Unicorn + nginx.
        # Otherwise you _want_ nginx to buffer responses to slow
        # clients, really.
        # proxy_buffering off;

        # Try to serve static files from nginx, no point in making an
        # *application* server like Unicorn/Rainbows! serve static files.
        # if (!-f $request_filename) {
        proxy_pass http://metabase_server;
            # break;
        # }
    }

        location /dremio {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_redirect off;
        proxy_pass http://dremio_ui;
  }

    # Error pages
    # error_page 500 502 503 504 /500.html;
    # location = /500.html {
    #     root /app/mysupplychain/frontend/static/;
    # }
}